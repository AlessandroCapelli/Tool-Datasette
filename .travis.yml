language: python
dist: xenial

# 3.6 is listed first so it gets used for the later build stages
matrix:
  include:
    - os: linux
      python: "3.6"
    - os: linux
      python: "3.5"
    - os: linux
      python: "3.7"
    - os: windows
      language: bash
      name: Windows

install:
    - if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      choco install python3;


# Executed for 3.5 AND 3.5 as the first "test" stage:
script:
  - python -m pip install -U pip wheel
  - python -m pip install .[test]
  - pytest

cache:
    directories:
        - $HOME/.cache/pip

# This defines further stages that execute after the tests
jobs:
  include:
    - stage: deploy latest.datasette.io
      if: branch = master AND type = push
      script:
        - python -m pip install .[test]
        - npm install -g now
        - python tests/fixtures.py fixtures.db fixtures.json
        - export ALIAS=`echo $TRAVIS_COMMIT | cut -c 1-7`
        - datasette publish nowv1 fixtures.db -m fixtures.json --token=$NOW_TOKEN --branch=$TRAVIS_COMMIT --version-note=$TRAVIS_COMMIT --name=datasette-latest-$ALIAS --alias=latest.datasette.io --alias=$ALIAS.datasette.io
    - stage: release tagged version
      if: tag IS present
      python: 3.6
      deploy:
        - provider: pypi
          user: simonw
          distributions: bdist_wheel
          password: ${PYPI_PASSWORD}
          on:
            branch: master
            tags: true
    - stage: publish docker image
      if: tag IS present
      python: 3.6
      script:
        - npm install -g now
        - export ALIAS=`echo $TRAVIS_COMMIT | cut -c 1-7`
        - export TAG=`echo $TRAVIS_TAG | sed 's/\./-/g' | sed 's/.*/v&/'`
        - now alias $ALIAS.datasette.io $TAG.datasette.io --token=$NOW_TOKEN
        # Build and release to Docker Hub
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
        - export REPO=datasetteproject/datasette
        - docker build -f Dockerfile -t $REPO:$TRAVIS_TAG .
        - docker tag $REPO:$TRAVIS_TAG $REPO:latest
        - docker push $REPO
